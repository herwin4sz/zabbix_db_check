#############################################################################################################
# This is the config file for DB_check python script.
# The script will gathering the data and send to zabbix server
#
# Base section is the parameters about script running info
# log_level can be set as one of debug, info, warning, error, critical.
# zabbix_server and zabbix_port can only assign once
# interval means how long to check if the config file is modified
#############################################################################################################
[base]
log_level=info
interval=30
zabbix_server=zabbix.server
zabbix_port=10051

#############################################################################################################
# Database parameters
# Type is about database type. It only support Oracle right now. Maybe mysql will be added soon.
# Name is the identify label in zabbix, it must be same as the host name in zabbix system.
# This means you need to take a database as a host in zabbix. Create a host in zabbix when using the script
#
# Some database info should be given: ip, port, sid(for oracle), user, password.
#############################################################################################################
[database]
type=oracle
name=nameinzabbix
ip=10.10.10.10
port=1521
sid=dbsid
user=username
password=mypassword

#############################################################################################################
# Check item define start from here.
# [section] is use to separate different item.
#
# "type" can define to 's' or 'm'
# s ---- means the item will sent only one value to zabbix for this item. Like the active session number and
#        so on. The sql in this section should only return a single value. For 's' type you need to create
#        the zabbix trapper item in zabbix to get value. The trapper item key should be same as 'item_name'.
# m ---- means this section will sent multi value to zabbix. Like the usage for each tablespace. The sql in
#        this section should return rows of value in more than column. First column value will be combine with
#        each column title as the item name "<column title>.[row's first value]" in zabbix.
#
# "auto_discover" is only support in type 'm'. (At least for right now.....)
# You should create a discover rule in zabbix with the database host. In the rule key is the 'item_name',
# the macro is {#first column value}. And then the item prototype is just follow the zabbix introduction.
#
#        Example:
#          In config file:  type = m
#                           auto_discover = true
#                           sql = select username, account_status from dba_users
#                           item_name = user.status
#          In zabbix: autodiscover key = user.status
#                     autodiscover macro = {#USER.STATUS}
#                     {#USER.STATUS} will be assign to each value in username column
#                     item prototype key = ACCOUNT_STATUS[{#USER.STATUS}]
#            * Please remind that sql return title default in upper case, unless use "as" to convert it.
#
# "trigger" is define how to schedule the sql running and zabbix value sending. It can define to 'interval'
# or 'cron'
# interval ---- if trigger define as 'interval', you need to define parameter 'interval' which is use second
#               as unit. It means the sql and value sending will run in cycle. Example: when interval=50,
#               the sql and value sending will run every 50 seconds.
# cron ---- if trigger define as 'interval', you need to define parameter "hour" and "minute". It basically
#           is same as the linux crontab. But only support hour and minute.
#
# "sql" is the script that will run in database and return the value for zabbix.
# Note: in sql part symbol '%' is need convert to '%%'
#
#############################################################################################################
[active.session]
type=s
auto_discover=false
item_name=active.session
trigger=interval
interval=600
sql=select count(*) from sys.v_$session where status='ACTIVE'

[process]
type=s
auto_discover=false
item_name=process
trigger=interval
interval=600
sql=select count(*) from sys.v_$process

[tablespace.usage]
type=m
auto_discover=true
item_name=tablespace.usage
trigger=cron
hour=*
minute=0,5,10,15,20,25,30,35,40,45,50,55
sql=select df.tablespace_name, round((1-freespace/totalspace),2) as "tablespace.usage" from (select tablespace_name,round(sum(bytes)/1024/1024,2) totalspace from dba_data_files group by tablespace_name) df, (select tablespace_name,round(sum(bytes)/1024/1024,2) freespace from dba_free_space group by tablespace_name) fs where df.tablespace_name=fs.tablespace_name order by tablespace_name

[user.status]
type=m
auto_discover=true
item_name=user.status
trigger=cron
hour=1
minute=0
sql=select username, account_status, FLOOR(expiry_date - SYSDATE) AS "EXPIRY_DATE" from dba_users
